# Generated by Django 4.2 on 2025-05-29 14:44

from django.db import migrations

def cargar_catalogos(apps, schema_editor):
    FormaPago = apps.get_model('fac', 'FormaPago')
    MetodoPago = apps.get_model('fac', 'MetodoPago')
    UsoCfdi = apps.get_model('fac', 'UsoCfdi')
    RegimenFiscal = apps.get_model('cxc', 'RegimenFiscal')
    UnidadMedida = apps.get_model('inv', 'UnidadMedida')
    ClaveMovimiento = apps.get_model('inv', 'ClaveMovimiento')
    
    formas_pago = [
        ('01', '01 | Efectivo'),
        ('02', '02 | Cheque nominativo'),
        ('03', '03 | Transferencia electrónica de fondos'),
        ('04', '04 | Tarjeta de crédito'),
        ('05', '05 | Monedero electrónico'),
        ('06', '06 | Dinero electrónico'),
        ('08', '08 | Vales de despensa'), 
        ('12', '12 | Dación en pago'),
        ('13', '13 | Pago por subrogación'),
        ('14', '14 | Pago por consignación'),
        ('15', '15 | Condonación'),
        ('17', '17 | Compensación'),
        ('23', '23 | Novación'),
        ('24', '24 | Confusión'),
        ('25', '25 | Remisión de deuda'),
        ('26', '26 | Prescripción o caducidad'),
        ('27', '27 | Satisfacción del acreedor'),
        ('28', '28 | Tarjeta de débito'),
        ('29', '29 | Tarjeta de servicios'),
        ('30', '30 | Aplicación de anticipos'),
        ('31', '31 | Intemediario pagos'),
        ('99', '99 | Por definir'),
    ]

    metodos_pago = [
        ('PUE', 'PUE | Pago en una sola exhibición'),
        ('PPD', 'PPD | Pago en parcialidades o diferido'),
    ]
    
    usos_cfdi = [
        ('D01', 'D01 | Honorarios médicos, dentales y gastos hospitalarios'),
        ('D02', 'D02 | Gastos médicos por incapacidad o discapacidad'),
        ('D03', 'D03 | Gastos funerales'),
        ('D04', 'D04 | Donativos'),
        ('D05', 'D05 | Intereses reales efectivamente pagados por créditos hipotecarios (casa habitación)'),
        ('D06', 'D06 | Aportaciones voluntarias al SAR'),
        ('D07', 'D07 | Primas por seguros de gastos médicos'),
        ('D08', 'D08 | Gastos de transportación escolar obligatoria'),
        ('D09', 'D09 | Depósitos en cuentas para el ahorro, primas que tengan como base planes de pensiones'),
        ('D10', 'D10 | Pagos por servicios educativos (colegiaturas)'),
        ('G01', 'G01 | Adquisición de mercancías'),
        ('G02', 'G02 | Devoluciones, descuentos o bonificaciones.'),
        ('G03', 'G03 | Gastos en general'),
        ('I01', 'I01 | Construcciones'),
        ('I02', 'I02 | Mobiliario y equipo de oficina por inversiones'),
        ('I03', 'I03 | Equipo de transporte'),
        ('I04', 'I04 | Equipo de computo y accesorios'),
        ('I05', 'I05 | Dados, troqueles, moldes, matrices y herramental'),
        ('I06', 'I06 | Comunicaciones telefónicas'),
        ('I07', 'I07 | Comunicaciones satelitales'),
        ('I08', 'I08 | Otra maquinaria y equipo'),
        ('S01', 'S01 | Sin efectos fiscales'),
        ('P01', 'P01 | Por definir'),
    ]

    regimen_fiscal = [
        ('601', '601 | General de Ley Personas Morales'),
        ('603', '603 | Personas Morales con Fines no Lucrativos'),
        ('605', '605 | Sueldos y Salarios e Ingresos Asimilados a Salarios'),
        ('606', '606 | Arrendamiento'),
        ('607', '607 | Régimen de Enajenación o Adquisición de Bienes'),
        ('608', '608 | Demás ingresos'),
        ('610', '610 | Residentes en el Extranjero sin Establecimiento Permanente en México'),
        ('611', '611 | Ingresos por Dividendos (socios y accionistas)'),
        ('612', '612 | Personas Físicas con Actividades Empresariales y Profesionales'),
        ('614', '614 | Ingresos por intereses'),
        ('615', '615 | Régimen de los ingresos por obtención de premios'),
        ('616', '616 | Sin obligaciones fiscales'),
        ('620', '620 | Sociedades Cooperativas de Producción que optan por diferir sus ingresos'),
        ('621', '621 | Incorporación Fiscal'),
        ('622', '622 | Actividades Agrícolas, Ganaderas, Silvícolas y Pesqueras'),
        ('623', '623 | Opcional para Grupos de Sociedades'),
        ('624', '624 | Coordinados'),
        ('625', '625 | Régimen de las Actividades Empresariales con ingresos a través de Plataformas Tecnológicas'),
        ('626', '626 | Régimen Simplificado de Confianza'),
    ]

    unidades = [
        ('H87', 'Pieza'),
        ('E48', 'E48 | Unidad de servicio'),
        ('KGM', 'KGM | Kilogramo'),
        ('LTR', 'LTR | Litro'),
        ('MTR', 'MTR | Metro'),
    ]

    compras = [
        ('CO', 'Compras'),
    ]

    for clave, nombre in formas_pago:
        FormaPago.objects.get_or_create(forma_pago=clave, nombre=nombre)
    for clave, nombre in metodos_pago:
        MetodoPago.objects.get_or_create(metodo_pago=clave, nombre=nombre)
    for clave, descripcion in usos_cfdi:
        UsoCfdi.objects.get_or_create(uso_cfdi=clave, nombre=descripcion)
    for clave, nombre in regimen_fiscal:
        RegimenFiscal.objects.get_or_create(regimen_fiscal=clave, nombre=nombre)
    for clave, nombre in unidades:
        UnidadMedida.objects.get_or_create(unidad_medida=clave, descripcion=nombre)
    for clave, nombre in compras:
        ClaveMovimiento.objects.get_or_create(clave_movimiento=clave, nombre=nombre)

class Migration(migrations.Migration):

    dependencies = [
        ('fac', '0001_initial'),  # ultimo archivo en fac/migrations
        ('cxc', '0003_alter_regimenfiscal_nombre'),  # ultimo archivo en cxc/migrations
        ('inv', '0002_alter_unidadmedida_unidad_medida'),  # ultimo archivo en inv/migrations
        
    ]

    operations = [
        migrations.RunPython(cargar_catalogos),
    ]
